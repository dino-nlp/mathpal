# Use Python slim base image for smaller footprint
FROM python:3.11-slim

ENV POETRY_VERSION=1.8.3
ENV DEBIAN_FRONTEND=noninteractive
ENV PIP_DEFAULT_TIMEOUT=1000

# Install minimal system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry with increased timeout and clear cache
RUN pip install --no-cache-dir --timeout=1000 "poetry==$POETRY_VERSION"
RUN poetry config installer.max-workers 5
RUN poetry config installer.parallel true

# Set the working directory
WORKDIR /app

# Copy the pyproject.toml and poetry.lock files from the root directory
COPY ./pyproject.toml ./poetry.lock ./

# Configure poetry for production and install core dependencies only
RUN poetry config virtualenvs.create false && \
    poetry install --no-root --no-interaction --no-cache --only main --no-ansi && \
    rm -rf ~/.cache/pypoetry/cache/ && \
    rm -rf ~/.cache/pypoetry/artifacts/

# Copy the data_cdc and core directories
COPY ./src/data_cdc ./data_cdc
COPY ./src/core ./core

# Set the PYTHONPATH environment variable
ENV PYTHONPATH=/app

# Command to run the script
CMD poetry run python /app/data_cdc/cdc.py && tail -f /dev/null 